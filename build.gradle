apply plugin: 'maven'
apply plugin: 'application'

group = 'com.github.kkanzelmeyer'
version = '2.0.0'

description = "Alfred: Motion Sensor"

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenLocal()
    maven { url "http://repo.maven.apache.org/maven2" }
}


// add src/test/resources to sources for unit tests
sourceSets{
  test {
    resources {
      srcDir "src/test/resources"
    }
  }
}


dependencies {
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.12'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.2'
    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.1.2'
    compile group: 'com.github.sarxos', name: 'webcam-capture', version: '0.3.13'
    compile group: 'com.github.sarxos', name: 'webcam-capture-driver-fswebcam', version: '0.3.10'
    compile group: 'com.github.sarxos', name: 'webcam-capture-driver-v4l4j', version: '0.3.11'
    compile group: 'commons-io', name: 'commons-io', version: '2.4'
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    compile group: 'javax.mail', name: 'mail', version: '1.4.7'
    compile group: 'org.logback-extensions', name: 'logback-ext-loggly', version: '0.1.2'
    compile ('com.google.cloud:google-cloud-storage:1.2.1') {
        exclude group: 'com.google.guava', module: 'guava-jdk5'
    }
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'
    compile group: 'com.google.http-client', name: 'google-http-client', version: '1.22.0'
    compile 'com.google.firebase:firebase-admin:5.2.0'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

mainClassName = "com.github.kkanzelmeyer.alfred.App"

// copy src/test/resources into distribution `config` folder
distributions {
    main {
        contents {
            from("src/test/resources") {
               into "config"
            }
        }
    }
}

// customization of startscript
// this allows to add configuration items to the `config` directory
// outside of the lib directory
startScripts {
    classpath = files('$APP_HOME/lib/*', 'config')
    doLast {
	    def windowsScriptFile = file getWindowsScript()
	    def unixScriptFile    = file getUnixScript()
	    windowsScriptFile.text = windowsScriptFile.text.replace('%APP_HOME%\\lib\\config', '%APP_HOME%\\config')
	    unixScriptFile.text  = unixScriptFile.text.replace('$APP_HOME/lib/config', '$APP_HOME/config')
	  }
}

// this isn't working for some reason - but the guava jdk jar needs to be deleted from the application lib directory
applicationDistribution.exclude('**/guava-jdk5*-.jar')
